[{"/Users/rubbensboisguene/Downloads/CUSD/src/index.js":"1","/Users/rubbensboisguene/Downloads/CUSD/src/reportWebVitals.js":"2","/Users/rubbensboisguene/Downloads/CUSD/src/Router.js":"3","/Users/rubbensboisguene/Downloads/CUSD/src/App.js":"4","/Users/rubbensboisguene/Downloads/CUSD/src/QRcode.js":"5"},{"size":636,"mtime":1677931449000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1677440942000,"results":"8","hashOfConfig":"7"},{"size":351,"mtime":1677931326000,"results":"9","hashOfConfig":"7"},{"size":31225,"mtime":1680499519572,"results":"10","hashOfConfig":"7"},{"size":4556,"mtime":1677488828000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"mczfq5",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/rubbensboisguene/Downloads/CUSD/src/index.js",[],["24","25"],"/Users/rubbensboisguene/Downloads/CUSD/src/reportWebVitals.js",[],"/Users/rubbensboisguene/Downloads/CUSD/src/Router.js",[],"/Users/rubbensboisguene/Downloads/CUSD/src/App.js",["26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42"],"/Users/rubbensboisguene/Downloads/CUSD/src/QRcode.js",["43","44","45","46"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport QRCode from \"react-qr-code\";\nimport { QRCodeCanvas } from \"qrcode.react\";\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\n\n\nfunction QR() {\n\nconst [ QR , setQR ] = useState(\"\");\nconst [ connect , setConnect ] = useState(\"Connect wallet\");\n  \nconst providerOptions = {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: \"BKsAeeC-F7GB6KBzySe_p5aOCRQ1ZH9l\", // required\n      },\n    },\n    coinbasewallet: {\n      package: CoinbaseWalletSDK, // Required\n      options: {\n        appName: \"web3modal\", // Required\n        infuraId: \"BKsAeeC-F7GB6KBzySe_p5aOCRQ1ZH9l\", // Required\n        rpc: \"\", // Optional if `infuraId` is provided; otherwise it's required\n        chainId: 97, // Optional. It defaults to 1 if not provided\n        darkMode: false, // Optional. Use dark theme, defaults to false\n      },\n    },\n    binancechainwallet: {\n      package: true,\n    },\n  };\n  \n  \n  const web3Modal = new Web3Modal({\n    network: \"mainnet\", // optional\n    cacheProvider: true, // optional\n    providerOptions, // required\n  });\n  \n  const connectWallet = async () => {\n    // if (window.ethereum) {\n      const provider = await web3Modal.connect();\n      const web3 = new Web3(provider);\n      await window.ethereum.send(\"eth_requestAccounts\");\n      const accounts = await web3.eth.getAccounts();\n      const account = accounts[0];\n      setConnect(account.slice(0,4) + \"...\" + account[0].slice(-2));\n      setQR(\"https://dispayment.netlify.app/?=ref\"+ account)\n      console.log(window.location.href.toString() + \"?=ref\"+ account);\n      console.log(\"web3model hai ye \" ,account);\n      // document.querySelector(\".connect\").innerHTML = account;\n    // } else {\n    //   // Show alert if Ethereum provider is not detected\n    //   alert(\"Please install Mask\");\n    // }\n  };\n\n\n\n\n\n  useEffect(()=>{\n\n    \n\n  }, [])\n\n\n\n\n  return (\n    <div style={{backgroundColor :\"white\"}} className=\"App\">\n\n\n\n\n\n\n\n<div className=\"main\">\n  {/* ***** Header Start ***** */}\n  <header   id=\"header\">\n    {/* Navbar */}\n    <nav style={{backgroundColor :\"#090a1a\"}} data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar gameon-navbar navbar-expand\">\n      <div className=\"container header\">\n        {/* Logo */}\n        <a className=\"navbar-brand\" href=\"/\">\n          <img src=\"/img/logo/logo.png\" alt=\"Brand Logo\" />\n        </a>\n        <div className=\"ml-auto\" />\n        {/* Navbar Nav */}\n       \n       \n        {/* Navbar Icons */}\n        {/* Navbar Toggler */}\n        <ul className=\"navbar-nav toggle\">\n          <li className=\"nav-item\">\n            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\n              <i className=\"icon-menu m-0\" />\n            </a>\n          </li>\n        </ul>\n        {/* Navbar Action Button */}\n        <ul className=\"navbar-nav action\">\n          <li className=\"nav-item ml-2\">\n            <a onClick={connectWallet} href=\"#\" className=\"btn ml-lg-auto btn-bordered-white\"><i className=\"icon-wallet mr-md-2\" />{connect}</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n  {/* ***** Header End ***** */}\n  {/* ***** Hero Area Start ***** */}\n \n  {/*====== Modal Search Area End ======*/}\n  {/*====== Modal Responsive Menu Area Start ======*/}\n  <div id=\"menu\" className=\"modal fade p-0\">\n    <div className=\"modal-dialog dialog-animated\">\n      <div className=\"modal-content h-100\">\n        <div className=\"modal-header\" data-dismiss=\"modal\">\n          Menu <i className=\"far fa-times-circle icon-close\" />\n        </div>\n        <div className=\"menu modal-body\">\n          <div className=\"row w-100\">\n            <div className=\"items p-0 col-12 text-center\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <section className=\"staking-area\" id=\"stake\">\n\n\n  <div style={{ height: \"auto\", margin: \"0 auto\", maxWidth: 500, width: \"90%\" }}>\n    <QRCode\n    size={256}\n    style={{ height: \"auto\", maxWidth: \"100%\", width: \"100%\" }}\n    value={QR}\n    viewBox={`0 0 256 256`}\n    />\n\n{/* <QRCodeCanvas\n      id=\"qrCode\"\n      value={}\n      size={300}\n      bgColor={\"#00ff00\"}\n      level={\"H\"}\n    /> */}\n\n</div>\n\n  \n  </section>\n  {/*====== Modal Responsive Menu Area End ======*/}\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default QR;\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":16,"column":7,"nodeType":"53","messageId":"54","endLine":16,"endColumn":15},{"ruleId":"51","severity":1,"message":"56","line":17,"column":18,"nodeType":"53","messageId":"54","endLine":17,"endColumn":27},{"ruleId":"57","severity":1,"message":"58","line":51,"column":6,"nodeType":"59","endLine":51,"endColumn":8,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":222,"column":13,"nodeType":"63","endLine":222,"endColumn":86},{"ruleId":"61","severity":1,"message":"62","line":239,"column":13,"nodeType":"63","endLine":239,"endColumn":95},{"ruleId":"61","severity":1,"message":"62","line":259,"column":15,"nodeType":"63","endLine":259,"endColumn":76},{"ruleId":"61","severity":1,"message":"62","line":260,"column":15,"nodeType":"63","endLine":260,"endColumn":61},{"ruleId":"64","severity":1,"message":"65","line":459,"column":15,"nodeType":"63","endLine":459,"endColumn":59},{"ruleId":"61","severity":1,"message":"66","line":465,"column":15,"nodeType":"63","endLine":465,"endColumn":69},{"ruleId":"67","severity":1,"message":"68","line":468,"column":11,"nodeType":"63","endLine":468,"endColumn":37},{"ruleId":"61","severity":1,"message":"66","line":468,"column":11,"nodeType":"63","endLine":468,"endColumn":37},{"ruleId":"61","severity":1,"message":"62","line":488,"column":19,"nodeType":"63","endLine":488,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":493,"column":19,"nodeType":"63","endLine":493,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":498,"column":19,"nodeType":"63","endLine":498,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":503,"column":19,"nodeType":"63","endLine":503,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":509,"column":86,"nodeType":"63","endLine":509,"endColumn":114},{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":12},{"ruleId":"51","severity":1,"message":"69","line":7,"column":10,"nodeType":"53","messageId":"54","endLine":7,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":106,"column":13,"nodeType":"63","endLine":106,"endColumn":86},{"ruleId":"61","severity":1,"message":"62","line":114,"column":13,"nodeType":"63","endLine":114,"endColumn":95},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'settosend' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connectWallet'. Either include it or remove the dependency array.","ArrayExpression",["72"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'QRCodeCanvas' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [connectWallet]",{"range":"75","text":"76"},[1024,1026],"[connectWallet]"]